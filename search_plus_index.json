{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction 2022 中南林业科技大学软件协会新生答疑文档。 "},"post/picgo.html":{"url":"post/picgo.html","title":"图床配置问题汇总","keywords":"","body":"1.Typora上传图片后链接乱码 :herb: 如这种乱码：https%3A%2F%2Fgitee.com%2FBLKblking%2Fzuoye%2Fraw%2Fmaster%2Fimage%2F2AqhAe.jpg 虽然变成了乱码，但你会发现在你的远程仓库是有了这张图片的。 :round_pushpin: 这是由于你的PicGo版本为beta测试版造成的，这是beta版本的。 PicGo发布者也明确指出：beta不是正式版，可以尝鲜新功能，但是并不会保证稳定性。 因此建议卸载picgo测试版，安装正式版。这里提供2.3.0正式版的链接： :one: 在我的百度网盘直接提取 链接：https://pan.baidu.com/s/1PXDeOL7JO0iKtz28fuJ92Q 提取码：1314 :two: 在github下载 :house: 下载链接：https://github.com/Molunerfinn/PicGo/releases/download/v2.3.0/PicGo-Setup-2.3.0-x64.exe 2.picgo在电脑右下角没有上传成功或失败提醒 这个需要检查你的两个地方的设置是否开启： :one: PicGo设置 :two: 系统级别的消息通知 再将上图页面向下拉，看是否允许PicGo通知： 3.picgo提示400错误信息上传失败 是因为你的仓库中已经存在了 与你想要上传的图片 同名称的图片，为防止冲突而提示 400 上传失败： 解决方案： :one: 删除远程仓库的同名图片或修改其图片名称 :two: 修改你想要上传的图片的图片名称 4.picgo提示404错误信息上传失败 请仔细检查你在picgo的图床repo配置是否正确，建议不要手敲，从远程仓库信息配置拷贝最为稳妥 这里以 Gitee 演示，Github在同样位置可看到 :one: 查看个人空间地址 :two: 查看仓库链接名 5.PicGo安装已终止：安装程序并未成功地运行完成 :point_down: 你的安装出现了如下情况 5.1 原因一：电脑含有360卫士，鲁大师之类软件阻止安装 建议卸载，选用火绒进行安装防卫 :house: 火绒下载官网：https://www.huorong.cn/person5.html 5.2 原因二：直接删除PicGo文件导致没有删除干净/PicGo没有卸载干净 将有关文件清除。 :round_pushpin: 无论是卸载360、鲁大师，还是删除干净PicGo文件，我都建议你采用一款轻量高效的卸载工具：Geek Uninstaller :house: Geek Uninstaller下载网站：https://geekuninstaller.com/download 6.picgo/typora上传成功但无法加载图片 可能是图片名称的问题，你重命名一下你想上传的图片，再去上传，应该就没问题了。 "},"post/22.10.24.html":{"url":"post/22.10.24.html","title":"2022.10.24","keywords":"","body":"问题一 picgo安装出现该问题，请先关闭电脑上所有杀毒软件如360 、鲁大师 问题二 如果先安装的picgo再安装node.js会出现如图所示报错， 需要重启电脑 问题三 ==picgo双击不运行== 其实他已经运行了，藏在右下角 问题四 ==为什么第一次上传图片成功了 第二次又显示失败啊 （400报错）== 不能上传同一张图片，需要重复使用那一张图片直接复制之前的图片地址就好了，会自动加载出来） 问题五 scanf函数里面只保留输入格式，需要提示语句要使用prinft打印 问题六 ==为什么键盘输入的数和scanf函数读取的不一样== 首先检查scanf的输入格式 比如scanf（\"%d,%d\",&a,&b） 那么输入就必须要用 ，隔开。如果是scanf（\"%d%d\",&a,&b） 默认用空格隔开 问题七 ==这个填什么== 这个是存放typora创建的文件中的图片保存的本地地址 ，最好自己建一个文件夹，备份文件，因为虽然你的图片上传了图床，使用http地址访问，但是不保证图床不会崩 ，比如gitee就经常崩 ，所以图片本地备份很重要 问题八 ==访问github失败== github是国外的网站，连接超时很正常，解决方法有挂梯子，或者开加速器，推荐一个免费加速器 steam++ 问题九 ==运行结果和预期不一样== 原因： 在vs使用scanf_s short要使用%hd为占位符 scanf_s里面不要用换行符了，不然回车一直没结果 问题十 ==怎么KO这个BUG== 首先警告不影响运行 其次，报警告是微软把scanf改了，改成了scanf_s 一堆毛病 解决方法 就在程序第一行加宏定义 就可以使用scanf函数 问题十一 部分编译器会强制要求初始化变量 图中既给s赋初值 问题十二 ==回车没反应== 图中已经标出外循环和内循环都进行了 i=0 ,导致了死循环 并且变量n还未初始化 内循环的判断语句写出赋值语句 判断语句要双等号 == 问题十三 ==空格和tab的缩进有什么区别啊== 正常的文本输入框中一个tab相当于四个空格，，部分文本输入软件中 tab可以增加列表缩进层级 "},"post/22.10.21.html":{"url":"post/22.10.21.html","title":"2022.10.21","keywords":"","body":"问题一 main左边的括号是中文括号 第6行左边是 :(分号),应该是; 问题二 数组越界 解决方法 在prime[i * x] = 0之前加一个if ((i * x) 语句用于判断保证其不出界 或者将数组开大一点，const int maxnumber = 10000; 问题三 使用pow函数需要包含math头文件 解决方法 在最上方加上#include 问题四 vs中一个项目不能有多个main函数 解决方法 将另外的主函数注释掉或者删除掉 或者将另外的一个主函数写成main01,main02 (可行是因为改写为main01,main02编译器将他们识别成了普通函数，保证了一个项目中只有一个函数) 问题五 不能使用^n表示n次方 应该使用math库中的pow函数 问题六 使用scanf输入 格式必须和严格按照scanf中的格式输入 "},"post/22.10.20.html":{"url":"post/22.10.20.html","title":"2022.10.20","keywords":"","body":"问题答疑 10.20 问题一 分号打错 新手写C建议用VS，vscode需要先配置好环境 问题二 创建新项目时选择“空项目” 问题三 不理解的程序，最好上机操作一下，把自己当成电脑思考程序的运行过程 问题四 对好函数名称 问题五 这个红色的字体怎么打 想要说的话 想要说的话"},"post/22.10.19.html":{"url":"post/22.10.19.html","title":"2022.10.19","keywords":"","body":"10.19-问题总结 1.unsigned为什么输出了负数 涉及底层存储,考试不会考这么深,实际开发也没人这么用,初学阶段意义不大，深入学习的时候可研究下 2.不知道怎么找异常 发现是递归没有返回归（只递不归hh）。 3.做笔记markdown语法咋办，打出来就直接翻译了 这个别管,后面你学的多自然而然就懂了 4.撤回列表符号什么意思 这个就是把缩进去掉了,不去掉缩进,你按删除键,不是往前走一格,而且整个缩进都被删掉了 5.字体大小怎么没有变 错把font打成front "},"post/22.10.12.html":{"url":"post/22.10.12.html","title":"2022.10.12","keywords":"","body":"2022.10.12问题总结 1.代码打到一半电脑没电关机了，会保存吗 会。内存内容写入硬盘中，是实时写入,所以断电，内存内容全丢失了，但是硬盘中没有,而且会在硬盘中写入特别的标识符,重启以后，读取硬盘文件，读取到特殊的标识符，就知道是异常关闭了 2.switch()后面不加；分号的作用是结束语句 switch() { case1: ; case2: ; } 3.截图快捷键 windows 自带：shift+win+s QQ截图：ctrl+alt+a QQ录屏：ctrl+alt+s QQ自带的截工具非常好用，建议多使用，而不是拍照提问， 多截图少拍照，爱护学长学姐的眼睛！ 4.int和long int的区别是啥 早期的操作系统是16位系统， int用二字节表示，范围是-32768~32767； long用4字节表示，范围是-2147483648~2147483647。 后来发展到32位操作系统， int 用4字节表示，与long相同。 目前的操作系统已发展到64位操作系统，但因程序编译工艺的不同，两者表现出不同的差别： 32位编译系统：int占四字节，与long相同。 64位编译系统：int占四字节，long占8字节，long数据范围变为：-2^63~2^63-1 5.关于double以及double和float的区别 在涉及到运算过程中或者运算结果中会出现小数的运算一定要考虑给数字上double修饰： 计算机不做四舍五入运算，遇到小数部分直接舍掉 int a = 1; int b = 2; printf(\"%d\", a / b );//结果是0 double作为一种高精度的数字类型，在运算时能获得更高的精度 double与float的区别：（float运算时转double存疑，大家先忽略这一点） 在内存中占有的字节数不同 单精度浮点数在机内存占4个字节 双精度浮点数在机内存占8个字节 有效数字位数不同 单精度浮点数有效数字8位 双精度浮点数有效数字16位 数值取值范围 单精度浮点数的表示范围：-3.40E+38~3.40E+38 双精度浮点数的表示范围：-1.79E+308~-1.79E+308 在程序中处理速度不同 一般来说，CPU处理单精度浮点数的速度比处理双精度浮点数快，如果不声明，默认小数为double类型，所以如果要用float的话，必须进行强转 例如：float a=1.3; 会编译报错，正确的写法 float a = (float)1.3;或者float a = 1.3f;（f或F都可以不区分大小写）。 关于冒泡排序 后面会有排序专题，大家保持期待吧！ "},"post/22.10.11.html":{"url":"post/22.10.11.html","title":"2022.10.11","keywords":"","body":"今天没有问题，多问才能理解的更快！ "},"post/22.10.10.html":{"url":"post/22.10.10.html","title":"2022.10.10","keywords":"","body":"今天没有问题，好好休息一下吧。 "},"post/22.10.09.html":{"url":"post/22.10.09.html","title":"2022.10.09","keywords":"","body":"2022.10.9问题总结 问题一：double类型要哪种打印符号 %c 字符 %d 有符号十进制整数 %f (%lf) 浮点数(包括float和doulbe) %e(%E) 浮点数指数输出[e-(E-)记数法] %g(%G) 浮点数不显无意义的零\"0\" %i 有符号十进制整数(与%d相同) %u 无符号十进制整数 %o 八进制整数 e.g. 0123 %x(%X) 十六进制整数() e.g. 0x1234 %p 指针 %s 字符串 %% \"%\" 问题二：对我们这个专业来说，数学到底要求高不高 答：在计算机开发中，大部分的场景对于数学的要求并不高，少部分场景也是对特定的数学领域有较高要求，比如说人工智能，机器学习中的线性代数，算法工程中的很多数学问题也是有一些特定的数学方向的知识的要求，如果有同学对这些方面的发展感兴趣，可以去了解相关的数学知识。虽然说大部分的开发场景中要求不高，但是数学作为一个基础学科还是很有学习的必要的，并且计算机开发也是需要会做算法题的，数学知识基础扎实的话肯定会更有帮助。 问题三：推荐书籍和网课 答：学校发的教材其实并不是很好，上课跟不上的同学也不用着急，可以去B站或者中国大学慕课找C语言的网课听。推荐网课：中国大学慕课的翁恺老师的C语言，推荐书籍：c primer plus（很全，很多，可以挑自己不懂的地方看）。 问题四： 答：这个问题之前出现过很多次，原因是因为VS是一个面向工程的IDE，在C语言中，一个程序只允许存在一个main函数，如果你在同一个目录下创建了多个文件，同时存在多个main函数就会出现这个报错。 解决办法： 找到不参与本次运行的程序，右键点击属性，出现以下界面： 改成从生成中排出即可 或者直接将不需要的文件彻底删除，或者将其他文件的main函数注释。 多敲代码，多实践才是王道！ "},"post/22.10.08.html":{"url":"post/22.10.08.html","title":"2022.10.08","keywords":"","body":"问题总结：2022.10.8 1.关于进制问题： 一串数字，如果以H结尾或者0X开头，为16进制数字； 一串数字，如果以O结尾，为8进制数字； 2.关于数组和链表的对比优劣： 链表特性：由于不使用下标进行索引，可以通过相邻节点的操作来增加元素和删除元素(数据结构会学到)，增加元素和删除元素较易； 数组特性：通过下标索引，所以查询和修改会比较方便； 通常情况下通过不同需求使用不同的数据结构； 3.链表堆区节点衍生出的内存四区的问题： 有同学写了c语言的官网题目，关于malloc提出了疑问，malloc函数是c语言用户手动在堆区开辟一段定长的内存。 首先介绍一下内存四区中的栈区和堆区，每个变量都会在计算机中存在地址 栈区：在函数中初始化的变量的地址放置在栈区，但栈区空间较小 堆区：c语言可以使用malloc函数对变量在堆区开辟空间，c++语言可以使用new函数在堆区开辟空间。 但是由于c和c++并没有垃圾回收机制（区别于Java可以由系统自动释放无用内存(GC垃圾回收机制)）。 当不需要该变量(对象)需要使用free函数（c语言释放内存函数）和dalete函数（c++释放内存函数）将malloc函数和new函数开辟空间的变量内存释放掉 4.Visual Studio报错之\"scanf_s\"问题： 由于vs的安全机制等特性，不允许使用scanf，但是后续版本中推出了scanf_s类型的安全输入函数(放心使用) 5.Visual Studio报错之\"无法解析的外部命令\"问题： 该文件下: (1)无main函数； (2)函数只声明却没定义函数体； (3)文件创建错误(创建时并不是c++源文件)； 其他文件的问题： （1）在其他项目中也存在main函数； 6.关于前置++和后置++的问题 w++和++w的效率问题：++w的效率大于w++ 前置++： 对于表达式的顺序，首先执行++操作之后再进行表达式操作，所以（1）操作等价于（2）和（3）操作，b=12 a=1； b=(++a)+(++a)+(++a);//（1） //b=12 ++a,++a,++a;//(2) b=a+a+a;//(3) 后置++： 对于表达式的顺序，首先进行表达式操作之后再执行++操作，所以（4）操作等价于（5）和（6）操作，b=3 a=1 b=(a++)+(a++)+(a++);//(4) //b=3 b=a+a+a;//(5) a++,a++,a++;//(6) "}}